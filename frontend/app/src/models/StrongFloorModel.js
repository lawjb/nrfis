/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import React, { useEffect } from "react";
import { useLoader, useThree } from "react-three-fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { renderSensorColour } from "./utils";

export default function StrongFloorModel(props) {
  const { camera } = useThree();

  const [{ nodes }, context] = useLoader(GLTFLoader, [
    "http://192.168.1.253:8000/strong-floor.glb",
    "http://192.168.1.253:8000/strong-floor-context.glb", // Local static file server
  ]);

  useEffect(() => {
    camera.zoom = props.zoom;
    camera.updateProjectionMatrix();
  }, [props.zoom]);

  return (
    <group {...props} dispose={null}>
      <scene name="Scene">
        {props.showContext ? (
          <group name="Z_UP" position={[-10, 0, 5]}>
            <mesh
              geometry={context.nodes["01rx$$eeIoIf75A6kFjQLz"].geometry}
              name="01rx$$eeIoIf75A6kFjQLz"
            >
              <meshBasicMaterial
                attach="material"
                color={"grey"}
                transparent={true}
                opacity={0.4}
              />
            </mesh>
          </group>
        ) : null}
        <group name="Z_UP" position={[-10, 0, 5]}>
          <mesh
            material={nodes["04iyR6e2lqJuxunywB_437"].material}
            geometry={nodes["04iyR6e2lqJuxunywB_437"].geometry}
            name="04iyR6e2lqJuxunywB_437"
          />
        </group>
      </scene>
    </group>
  );
}
